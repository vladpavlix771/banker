# -*- coding: utf-8 -*-
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.utils.markdown import hlink, hbold, hitalic
from aiogram.utils.emoji import emojize
from aiogram.utils.deep_linking import decode_payload
from aiogram.types import ParseMode, ReplyKeyboardMarkup, KeyboardButton
from aiogram.types.inline_keyboard import InlineKeyboardButton, InlineKeyboardMarkup
from requests import get
import sqlite3

TOKEN = "2013874301:AAHGXRw-AtkWlOtIaAFC1jnpUzoyeHrsB2I" # –¢–æ–∫–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞
btcincome = 0
rubincome = 0
dealcount = 0

inline_btn_1 = InlineKeyboardButton("üóû –í–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏", url="https://t.me/bitzlato_ru")
inline_btn_2 = InlineKeyboardButton("Telegram –≥—Ä—É–ø–ø–∞", url="https://t.me/bitzlato_rus")
inline_btn_3 = InlineKeyboardButton(emojize(":chart_with_upwards_trend: –ö—É–ø–∏—Ç—å"), callback_data="btn1")
inline_btn_4 = InlineKeyboardButton(emojize(":chart_with_downwards_trend: –ü—Ä–æ–¥–∞—Ç—å"), callback_data="btn2")
inline_kb1 = InlineKeyboardMarkup(resize_keyboard=True)
inline_kb1.row(inline_btn_1, inline_btn_2)
inline_kb1.row(inline_btn_3, inline_btn_4)

inline_btn_5 = InlineKeyboardButton(emojize(":dollar: –í–∞–ª—é—Ç–∞"), callback_data="btn3")
inline_kb2 = InlineKeyboardMarkup(resize_keyboard=True).add(inline_btn_5)

button1 = KeyboardButton(emojize(":briefcase: –ö–æ—à–µ–ª–µ–∫"))
button2 = KeyboardButton(emojize(":bar_chart: –û–±–º–µ–Ω BTC/RUB"))
button3 = KeyboardButton(emojize(":rocket: –û —Å–µ—Ä–≤–∏—Å–µ"))
button4 = KeyboardButton(emojize(":wrench: –ù–∞—Å—Ç—Ä–æ–π–∫–∏"))
button5 = KeyboardButton(emojize(":link: –ü—Ä–∏–≤—è–∑–∞—Ç—å WEB –∞–∫–∫–∞—É–Ω—Ç"))
button6 = KeyboardButton(emojize(":moyai: –ó–∞–±–µ—Ç–æ–Ω–∏—Ä–æ–≤–∞—Ç—å"))
markup_big = ReplyKeyboardMarkup(resize_keyboard=True)
markup_big.row(button1, button2)
markup_big.row(button3, button4)
markup_big.row(button5, button6)

button7 = InlineKeyboardButton(emojize(":inbox_tray: –í–Ω–µ—Å—Ç–∏"), callback_data="btn4")
button8 = InlineKeyboardButton(emojize(":outbox_tray: –í—ã–≤–µ—Å—Ç–∏"), callback_data="btn5")
button9 = InlineKeyboardButton(emojize(":gift: BTC —á–µ–∫"), callback_data="btn6")
button10 = InlineKeyboardButton(emojize(":bookmark_tabs: –û—Ç—á–µ—Ç—ã"), callback_data="btn7")
button11 = InlineKeyboardButton(emojize(":bank: –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å"), callback_data="btn8")
markup_big2 = InlineKeyboardMarkup(resize_keyboard=True)
markup_big2.row(button7, button8)
markup_big2.row(button9, button10)
markup_big2.add(button11)

button12 = InlineKeyboardButton(emojize(":chart_with_upwards_trend: –ö—É–ø–∏—Ç—å"), callback_data="btn9")
button13 = InlineKeyboardButton(emojize(":chart_with_downwards_trend: –ü—Ä–æ–¥–∞—Ç—å"), callback_data="btn10")
button14 = InlineKeyboardButton(emojize(":newspaper: –ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è"), callback_data="btn11")
button15 = InlineKeyboardButton(emojize(":tennis: –ë–µ–∑. –†–µ–∂–∏–º"), callback_data="btn12")
markup_big3 = InlineKeyboardMarkup(resize_keyboard=True)
markup_big3.row(button12, button13)
markup_big3.row(button14, button15)

button16 = InlineKeyboardButton("üóû –í–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏", url="https://t.me/bitzlato_ru")
button17 = InlineKeyboardButton(emojize(":gem: –ü—Ä–æ–¥—É–∫—Ç—ã"), callback_data="btn13")
button18 = InlineKeyboardButton(emojize(":man_technologist: –ü–æ–¥–¥–µ—Ä–∂–∫–∞"), url="https://telegram.me/HELP_BITZLATO_BOT")
button19 = InlineKeyboardButton(emojize(":page_facing_up: –£—Å–ª–æ–≤–∏—è"), url="https://bitzlato.com/terms-of-service-bitzlato/")
button20 = InlineKeyboardButton(emojize(":white_check_mark: –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è"), url="https://check.changebot.org/#!/id_14379549")
button21 = InlineKeyboardButton(emojize(":necktie: –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞"), callback_data="btn14")
button22 = InlineKeyboardButton(emojize(":bank: –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å"), callback_data="btn15")
markup_big4 = InlineKeyboardMarkup(resize_keyboard=True)
markup_big4.add(button16)
markup_big4.row(button17, button18)
markup_big4.row(button19, button20)
markup_big4.add(button21)
markup_big4.add(button22)

button23 = InlineKeyboardButton(emojize(":earth_africa: –Ø–∑—ã–∫"), callback_data="btn16")
button24 = InlineKeyboardButton(emojize(":bar_chart: –ö—É—Ä—Å BTC"), callback_data="btn17")
button25 = InlineKeyboardButton(emojize(":dollar: –í–∞–ª—é—Ç–∞"), callback_data="btn18")
button26 = InlineKeyboardButton(emojize(":bust_in_silhouette: –ò–º—è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"), callback_data="btn19")
button27 = InlineKeyboardButton(emojize(":star: –ò–∑–±—Ä–∞–Ω–Ω—ã–µ –∞–¥—Ä–µ—Å–∞"), callback_data="btn20")
button28 = InlineKeyboardButton(emojize(":tennis: –°–æ—Ö—Ä–∞–Ω—è—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã"), callback_data="btn21")
button29 = InlineKeyboardButton(emojize(":globe_with_meridians: –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å"), callback_data="btn22")
button30 = InlineKeyboardButton(emojize(":calling: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏"), callback_data="btn23")
markup_big5 = InlineKeyboardMarkup(resize_keyboard=True)
markup_big5.row(button23, button24)
markup_big5.row(button25, button26)
markup_big5.row(button27, button28)
markup_big5.row(button29, button30)

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=["start"])
async def process_start_command(message: types.Message):
    dataarray = []
    args = message.get_args()
    if args != "":
        conn = sqlite3.connect("codedb.db")
        cur = conn.cursor()
        exc = cur.execute(f"SELECT workername, rubcur, btccur FROM codes WHERE code=\"{args}\"")
        if exc != []:
            for i in exc:
                dataarray.append(i[0])
                dataarray.append(i[1])
                dataarray.append(i[2])
                workername = dataarray[0]
                global rubincome
                rubincome = i[1]
                global btcincome
                btcincome = i[2]
                global dealcount
                dealcount = 1
        conn.close()
    firstline = emojize(hbold(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {message.from_user.first_name}!") + "\n\n–≠—Ç–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã " + hlink("Bitzlato.bz", "https://bitzlato.bz") + " –¥–ª—è –æ–±–º–µ–Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã " + hbold("Bitcoin (BTC)") + " –∏ —Ñ–∏–∞—Ç–Ω—ã—Ö –¥–µ–Ω–µ–≥. –ê —Ç–∞–∫–∂–µ –±—ã—Å—Ç—Ä—ã–π –∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–æ—à–µ–ª–µ–∫!\n\n:information_source: –ö–ê–ö –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨:\n" + hlink("–í–ò–î–ï–û –ó–î–ï–°–¨", "https://www.youtube.com/watch?v=BdUBz4qujTk&t=33s"))
    await bot.send_message(message.chat.id, firstline, parse_mode=ParseMode.HTML, disable_web_page_preview=True, reply_markup=markup_big)
    await bot.send_message(message.chat.id, emojize(hbold("–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ —Å–µ—Ä–≤–∏—Å–∞: ") + "@Bitzlato_ru\n" + hbold("–£–∑–Ω–∞–π—Ç–µ –æ –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –∫–æ–º–ø–∞–Ω–∏–∏: ") + hlink("Bitzlato.bz", "https://bitzlato.bz/") + "\n" + hbold("–§–æ—Ä—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:\nhttps://talk.bitzlato.com/")), reply_markup=inline_kb1, parse_mode=ParseMode.HTML, disable_web_page_preview=True)
    await bot.send_message(message.chat.id, emojize(":dollar: " + hbold("–í–∞–ª—é—Ç–∞") + "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É. –≠—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –≤–ª–∏—è–µ—Ç –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π.\n\n–°–µ–π—á–∞—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è " + hbold("¬´RUB¬ª.") + "\n\n–í—ã –º–æ–∂–µ—Ç–µ –º–µ–Ω—è—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –≤ —Ä–∞–∑–¥–µ–ª–µ \"–ù–∞—Å—Ç—Ä–æ–π–∫–∏\"."), reply_markup=inline_kb2, parse_mode=ParseMode.HTML, disable_web_page_preview=True)
    if dataarray != []:
        transmsg = "–í—ã –ø–æ–ª—É—á–∏–ª–∏ " + hbold(f"{btcincome} BTC") + f" ({rubincome} RUB) –æ—Ç /u{workername}"
        await bot.send_message(message.chat.id, transmsg, parse_mode=ParseMode.HTML, disable_web_page_preview=True)

@dp.message_handler(lambda message: message.text == emojize(":briefcase: –ö–æ—à–µ–ª–µ–∫"))
async def kbresp1(message: types.Message):
    koshelekmsg = emojize(":briefcase: " + hbold("–ö–æ—à–µ–ª–µ–∫ BTC\n\n–ë–∞–ª–∞–Ω—Å: ") + f"{str(btcincome)} BTC\n" + hbold("–ü—Ä–∏–º–µ—Ä–Ω–æ: ") + f"{str(rubincome)} RUB\n" + hbold("–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: ") + f"0 BTC\n\n–ó–∞ 0 –¥–Ω–µ–π –≤–∞–º–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–æ {str(dealcount)} —É—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ –Ω–∞ –æ–±—â—É—é —Å—É–º–º—É {str(btcincome)} BTC.\n\n:handshake: " + hbold("–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: ") + "0 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n:moneybag: " + hbold("–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: ") + "0 BTC\n\n" + hbold("–†–µ–π—Ç–∏–Ω–≥: ") + ":baby: 0\n" + hbold("–û—Ç–∑—ã–≤—ã: ") + "(0):thumbsup: (0):thumbsdown:\n\n" + hbold("–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: ") + hlink("–ù–µ—Ç", "https://check.changebot.org/#!/id_14379549"))
    await bot.send_message(message.chat.id, koshelekmsg, parse_mode=ParseMode.HTML, disable_web_page_preview=True, reply_markup=markup_big2)

@dp.message_handler(lambda message: message.text == emojize(":bar_chart: –û–±–º–µ–Ω BTC/RUB"))
async def kbresp2(message: types.Message):
    btcprice = "".join(list(get("https://api.coindesk.com/v1/bpi/currentprice/RUB.json").json()["bpi"]["RUB"]["rate"].replace(",", " ").replace(".", ","))[:-2])
    obmenmsg = emojize(":bar_chart: " + hbold("–û–±–º–µ–Ω BTC/RUB") + "\n\n–ó–¥–µ—Å—å –í—ã —Å–æ–≤–µ—Ä—à–∞–µ—Ç–µ —Å–¥–µ–ª–∫–∏ —Å –ª—é–¥—å–º–∏, –∞ –±–æ—Ç –≤—ã—Å—Ç—É–ø–∞–µ—Ç –∫–∞–∫ –≥–∞—Ä–∞–Ω—Ç.\n\n:white_check_mark: –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º —Ä–µ–∂–∏–º–µ. –ï–≥–æ –º–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è 2—Ö —Å–¥–µ–ª–æ–∫.\n\n:warning: –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –≤—Å–µ –∫–æ–º–∏—Å—Å–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω—ã –≤ –∫—É—Ä—Å, –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ—á–Ω—É—é —Å—É–º–º—É, –∫–∞–∫ —É–∫–∞–∑–∞–Ω–Ω–æ –≤ —Å–¥–µ–ª–∫–µ!\n\n:robot: –í —Å–ª—É—á–∞–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞, –ø—Ä–æ—Å–∏–º —Å–æ–æ–±—â–∏—Ç—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ @HELP_BITZLATO_BOT\n\n" + hbold("–ë–∏—Ä–∂–µ–≤–æ–π –∫—É—Ä—Å: ") + f"{btcprice} RUB (Bittrex)")
    await bot.send_message(message.chat.id, obmenmsg, parse_mode=ParseMode.HTML, disable_web_page_preview=True, reply_markup=markup_big3)

@dp.message_handler(lambda message: message.text == emojize(":rocket: –û —Å–µ—Ä–≤–∏—Å–µ"))
async def kbresp3(message: types.Message):
    aboutmsg = emojize(hbold(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {message.from_user.first_name}!") + "\n\n–≠—Ç–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã " + hlink("Bitzlato.bz", "https://bitzlato.bz") + " –¥–ª—è –æ–±–º–µ–Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã " + hbold("Bitcoin (BTC)") + " –∏ —Ñ–∏–∞—Ç–Ω—ã—Ö –¥–µ–Ω–µ–≥. –ê —Ç–∞–∫–∂–µ –±—ã—Å—Ç—Ä—ã–π –∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–æ—à–µ–ª–µ–∫!\n\n–°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –¥–æ—Å–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π. –ü–æ–∫—É–ø–∫–∞ –∏ –ø—Ä–æ–¥–∞–∂–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å –¥—Ä—É–≥–∏–º–∏ –ª—é–¥—å–º–∏. Bitzlato –≤—ã—Å—Ç—É–ø–∞–µ—Ç –≥–∞—Ä–∞–Ω—Ç–æ–º —Å–¥–µ–ª–∫–∏.\n\n–¢–∞–∫–∂–µ –≤ –∫—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç—Ñ–æ—Ä–º—É –≤—Ö–æ–¥—è—Ç –±–æ—Ç—ã –¥–ª—è –æ–±–º–µ–Ω–∞ –¥—Ä—É–≥–∏—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç. –°—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∏—Ö –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤ –º–µ–Ω—é –±–æ—Ç–∞.\n\n:information_source: –ö–ê–ö –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨:\n" + hlink("–í–ò–î–ï–û –ó–î–ï–°–¨", "https://www.youtube.com/watch?v=BdUBz4qujTk&t=33s"))
    await bot.send_message(message.chat.id, aboutmsg, parse_mode=ParseMode.HTML, disable_web_page_preview=True, reply_markup=markup_big4)

@dp.message_handler(lambda message: message.text == emojize(":wrench: –ù–∞—Å—Ç—Ä–æ–π–∫–∏"))
async def kbresp4(message: types.Message):
    settingsmsg = emojize(":hammer_and_wrench: " + hbold("–ù–∞—Å—Ç—Ä–æ–π–∫–∏\n\n") + "–ß—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?\n\n:warning: –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ Telegram –ª–æ–≥–∏–Ω–∞ –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–≤—è–∑–∏ —Å –≤–æ–∑–º–æ–∂–Ω—ã–º –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ–º.\n\n" + hbold("–¢–µ–∫—É—â–∏–π –ª–æ–≥–∏–Ω: ") + "/uMadMarionTheFifth.")
    await bot.send_message(message.chat.id, settingsmsg, parse_mode=ParseMode.HTML, disable_web_page_preview=True, reply_markup=markup_big5)

@dp.message_handler(lambda message: message.text == emojize(":link: –ü—Ä–∏–≤—è–∑–∞—Ç—å WEB –∞–∫–∫–∞—É–Ω—Ç"))
async def kbresp5(message: types.Message):
    linkmsg = "–ü—Ä–∏–≤—è–∑—ã–≤–∞–Ω–∏–µ WEB –∞–∫–∫–∞—É–Ω—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –∏–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–∏—Ä–∂–∏ Bitzlato. –í—Å–µ –æ—Ä–¥–µ—Ä–∞ –±—ã–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω—ã, –∞ –±–∞–ª–∞–Ω—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ –±–æ—Ç–æ–≤ Bitzlato –∏–ª–∏ " + hlink("–≤–µ–±-–≤–µ—Ä—Å–∏—é", "https://bitzlato.bz/p2p")
    await bot.send_message(message.chat.id, linkmsg, parse_mode=ParseMode.HTML, disable_web_page_preview=True)

@dp.message_handler(lambda message: message.text == emojize(":moyai: –ó–∞–±–µ—Ç–æ–Ω–∏—Ä–æ–≤–∞—Ç—å"))
async def kbresp6(message: types.Message):
    betonmsg = "–ë–µ—Ç–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –∏–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–∏—Ä–∂–∏ Bitzlato. –í—Å–µ –æ—Ä–¥–µ—Ä–∞ –±—ã–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω—ã, –∞ –±–∞–ª–∞–Ω—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ –±–æ—Ç–æ–≤ Bitzlato –∏–ª–∏ " + hlink("–≤–µ–±-–≤–µ—Ä—Å–∏—é", "https://bitzlato.bz/p2p")
    await bot.send_message(message.chat.id, betonmsg, parse_mode=ParseMode.HTML, disable_web_page_preview=True)

@dp.message_handler(commands=["uMadMarionTheFifth"])
async def aboutprofile(message: types.Message):
    profilemsg = emojize(f"–ó–∞ 0 –¥–Ω–µ–π /uMadMarionTheFifth –ø—Ä–æ–≤–µ–ª {str(dealcount)} —É—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ –Ω–∞ –æ–±—â—É—é —Å—É–º–º—É {str(btcincome)} BTC.\n\n" + hbold("–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: ") + "–ù–µ—Ç\n\n" + hbold("–†–µ–π—Ç–∏–Ω–≥: ") + ":baby: 0\n" + hbold("–û—Ç–∑—ã–≤—ã: ") + "(0):thumbsup: (0):thumbsdown:\n" + hbold("–£—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: ") + f"{str(dealcount)}\n" + hbold("–û—Ç–º–µ–Ω—ë–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: ") + "0\n" + hbold("–ü–æ—Ä–∞–∂–µ–Ω–∏–π –≤ —Å–ø–æ—Ä–∞—Ö: ") + "0\n" + hbold("–î–æ–≤–µ—Ä—è—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ") + "0\n" + hbold("–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏: ") + "0\n")
    await bot.send_message(message.chat.id, profilemsg, parse_mode=ParseMode.HTML, disable_web_page_preview=True)

@dp.message_handler()
async def unknown_command(message: types.Message):
    if message.text.startswith("/u"):
        await bot.send_message(message.chat.id, emojize(":cry: –£–ø—Å!\n\n–ù–µ –Ω–∞–π–¥–µ–Ω–æ"), parse_mode=ParseMode.HTML, disable_web_page_preview=True)
        return
    um1 = emojize(":warning: " + hbold("–í–Ω–∏–º–∞–Ω–∏–µ, –≤–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ, –±—ã–ª–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!") + "\n\n:grey_exclamation: –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ –ø–∏—à—É—Ç ")
    um2 = emojize(hbold("—Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ —ç—Ç–æ–≥–æ –±–æ—Ç–∞") + " –∏–ª–∏ —á–µ—Ä–µ–∑ @HELP_BITZLATO_BOT –∏ –º–æ–≥—É—Ç –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ!\n\n:round_pushpin: –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ç–µ–ª–µ–≥—Ä–∞–º –ª–æ–≥–∏–Ω –±–æ—Ç–æ–≤ –∏ –ø–æ—Ä—Ç–∞–ª–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏!\n:round_pushpin: –í—ã–≤–æ–¥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª \"–ö–æ—à–µ–ª–µ–∫\",\n–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –ù–ï –≤—ã–≤–æ–¥–∏—Ç –≤ —Ä—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ!\n\n:calling: ")
    um3 = emojize(hitalic("–î–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å \'Two step verification\' (2FA) –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Telegram –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∏ –ª—é–±—ã–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–æ–¥—ã –∫–æ–º—É-–ª–∏–±–æ (–¥–∞–∂–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º Telegram –∏–ª–∏ changeBot)!") + "\n\n" + hbold("–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏: ") + "@HELP_BITZLATO_BOT\n" + hbold("–û–±—â–µ–Ω–∏–µ: ") + "https://talk.bitzlato.com/")
    unknownmessage = um1 + um2 + um3
    #python doesnt accept more than 75 or 150 symbols in one line
    await bot.send_message(message.chat.id, unknownmessage, parse_mode=ParseMode.HTML, disable_web_page_preview=True)

if __name__ == '__main__':
    executor.start_polling(dp)